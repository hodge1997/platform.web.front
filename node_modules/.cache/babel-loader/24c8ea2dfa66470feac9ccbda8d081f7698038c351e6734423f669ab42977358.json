{"ast":null,"code":"var _jsxFileName = \"/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/LoginPage/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LoginPage.css';\nimport { AuthContext } from '../../contexts/AuthContext'; // Import AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  var _location$state, _location$state2;\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    login\n  } = useContext(AuthContext); // Get login function from AuthContext\n\n  const onSubmit = async data => {\n    try {\n      const response = await fetch('https://cp.dhytv.com/v1/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: data.email,\n          password: data.password\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n\n        // Call the login function from AuthContext to update the context\n        login(result.data.accessToken, data.email);\n\n        // Show success message\n        toast.success('Login successful! Redirecting...', {\n          onClose: () => navigate('/') // Redirect after the toast closes\n        });\n      } else {\n        const errorData = await response.json();\n        console.error('Login failed:', errorData);\n        toast.error('Login failed: ' + errorData.message);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      toast.error('An error occurred during login. Please try again.');\n    }\n  };\n  const handleGoogleCLick = () => {\n    console.log('Google Login button clicked');\n    debugger;\n  };\n  const handleGoogleLoginSuccess = response => {\n    console.log('Google Login Success:', response);\n    const tokenId = response.credential;\n    // Example: send tokenId to backend to verify and get user info\n    fetch('https://cp.dhytv.com/v1/auth/google', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tokenId\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        login(data.accessToken, data.user.email);\n        toast.success('Google login successful! Redirecting...', {\n          onClose: () => navigate('/')\n        });\n      } else {\n        toast.error('Google login failed: ' + data.message);\n      }\n    }).catch(error => {\n      console.error('Error during Google login:', error);\n      toast.error('An error occurred during Google login. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"784196204527-gdj1ifiiac5164stndnsgh2mom2e0elu.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page\",\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"artistic-word\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || '',\n            ...register('email', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            defaultValue: ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.password) || '',\n            ...register('password', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"nav-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-login\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onClick: handleGoogleCLick,\n          onSuccess: handleGoogleLoginSuccess,\n          onError: () => {\n            console.log('TEST');\n            toast.error('Google login failed. Please try again.');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have a username? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"CPAj/uOCYw1XX+YtXmuzMEC2vFk=\", false, function () {\n  return [useForm, useNavigate, useLocation];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useContext","useForm","useLocation","useNavigate","Link","GoogleOAuthProvider","GoogleLogin","toast","ToastContainer","AuthContext","jsxDEV","_jsxDEV","LoginPage","_s","_location$state","_location$state2","register","handleSubmit","navigate","location","login","onSubmit","data","response","fetch","method","headers","body","JSON","stringify","email","password","ok","result","json","accessToken","success","onClose","errorData","console","error","message","handleGoogleCLick","log","handleGoogleLoginSuccess","tokenId","credential","then","res","user","catch","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","defaultValue","state","required","onClick","onSuccess","onError","to","_c","$RefreshReg$"],"sources":["/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/LoginPage/LoginPage.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LoginPage.css';\nimport { AuthContext } from '../../contexts/AuthContext'; // Import AuthContext\n\nconst LoginPage = () => {\n  const { register, handleSubmit } = useForm();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { login } = useContext(AuthContext); // Get login function from AuthContext\n\n  const onSubmit = async (data) => {\n    try {\n      const response = await fetch('https://cp.dhytv.com/v1/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: data.email,\n          password: data.password,\n        }),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n\n        // Call the login function from AuthContext to update the context\n        login(result.data.accessToken, data.email);\n\n        // Show success message\n        toast.success('Login successful! Redirecting...', {\n          onClose: () => navigate('/'), // Redirect after the toast closes\n        });\n      } else {\n        const errorData = await response.json();\n        console.error('Login failed:', errorData);\n        toast.error('Login failed: ' + errorData.message);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      toast.error('An error occurred during login. Please try again.');\n    }\n  };\n\n  const handleGoogleCLick = () => {\n    console.log('Google Login button clicked');\n    debugger;\n  };\n\n  const handleGoogleLoginSuccess = (response) => {\n    console.log('Google Login Success:', response);\n    const tokenId = response.credential;\n    // Example: send tokenId to backend to verify and get user info\n    fetch('https://cp.dhytv.com/v1/auth/google', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ tokenId }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          login(data.accessToken, data.user.email);\n          toast.success('Google login successful! Redirecting...', {\n            onClose: () => navigate('/'),\n          });\n        } else {\n          toast.error('Google login failed: ' + data.message);\n        }\n      })\n      .catch(error => {\n        console.error('Error during Google login:', error);\n        toast.error('An error occurred during Google login. Please try again.');\n      });\n  };\n\n  return (\n\n    <GoogleOAuthProvider clientId=\"784196204527-gdj1ifiiac5164stndnsgh2mom2e0elu.apps.googleusercontent.com\">\n      <div className=\"login-page\">\n        <ToastContainer /> {/* Toast container for notifications */}\n        <h1 className=\"artistic-word\">Login</h1>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label>Email:</label>\n            <input\n              type=\"text\"\n              defaultValue={location.state?.email || ''}\n              {...register('email', { required: true })}\n            />\n          </div>\n          <div>\n            <label>Password:</label>\n            <input\n              type=\"password\"\n              defaultValue={location.state?.password || ''}\n              {...register('password', { required: true })}\n            />\n          </div>\n          <button type=\"submit\" className=\"nav-button\">Login</button>\n        </form>\n\n        {/* Google Login Button */}\n        <div className=\"google-login\">\n          <GoogleLogin\n            onClick={handleGoogleCLick}\n            onSuccess={handleGoogleLoginSuccess}\n            onError={() => {\n              console.log('TEST')\n              toast.error('Google login failed. Please try again.');\n            }}\n          />\n        </div>\n\n        <p>Don't have a username? <Link to=\"/register\">Register here</Link></p>\n      </div>\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}