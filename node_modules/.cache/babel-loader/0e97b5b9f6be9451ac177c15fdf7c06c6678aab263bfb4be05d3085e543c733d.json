{"ast":null,"code":"var _jsxFileName = \"/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/NavBar/NavBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './NavBar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Assume a function getUserInfo() that fetches user info from token\n      const userInfo = getUserInfo(token);\n      setIsLoggedIn(true);\n      setUserName(userInfo.name);\n    }\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUserName('');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-left\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"nav-button\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-button\",\n          children: [\"User: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"nav-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"nav-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"nav-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n// Mock function to demonstrate extracting user info from token\n_s(NavBar, \"9HMJeuNgY0BE+bZQL9/82F1KJf4=\", false, function () {\n  return [useNavigate];\n});\n_c = NavBar;\nconst getUserInfo = token => {\n  // Normally, you'd decode the token and extract user information\n  return {\n    name: 'John Doe'\n  }; // Example name\n};\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","NavBar","_s","isLoggedIn","setIsLoggedIn","userName","setUserName","navigate","token","localStorage","getItem","userInfo","getUserInfo","name","handleLogout","removeItem","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/NavBar/NavBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './NavBar.css';\n\nconst NavBar = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Assume a function getUserInfo() that fetches user info from token\n      const userInfo = getUserInfo(token);\n      setIsLoggedIn(true);\n      setUserName(userInfo.name);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUserName('');\n    navigate('/login');\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-left\">\n        <Link to=\"/\" className=\"nav-button\">Home</Link>\n        {isLoggedIn ? (\n          <>\n            <span className=\"nav-button\">User: {userName}</span>\n            <button onClick={handleLogout} className=\"nav-button\">Logout</button>\n          </>\n        ) : (\n          <>\n            <Link to=\"/login\" className=\"nav-button\">Login</Link>\n            <Link to=\"/register\" className=\"nav-button\">Register</Link>\n          </>\n        )}\n      </div>\n    </nav>\n  );\n};\n\n// Mock function to demonstrate extracting user info from token\nconst getUserInfo = (token) => {\n  // Normally, you'd decode the token and extract user information\n  return { name: 'John Doe' }; // Example name\n};\n\nexport default NavBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}