{"ast":null,"code":"var _jsxFileName = \"/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/RecitePage/RecitePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RecitePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecitePage = () => {\n  _s();\n  const [dictionaries, setDictionaries] = useState([{\n    id: 1,\n    name: 'English-Chinese'\n  }, {\n    id: 2,\n    name: 'Business Terms'\n  }\n  // Add more dictionaries as needed\n  ]);\n  const [selectedDictionary, setSelectedDictionary] = useState(1);\n  const [words, setWords] = useState([{\n    word: 'Hello',\n    pronunciation: 'həˈləʊ',\n    verbFeature: 'greeting',\n    translation: '你好'\n  }, {\n    word: 'Goodbye',\n    pronunciation: 'ɡʊdˈbaɪ',\n    verbFeature: 'farewell',\n    translation: '再见'\n  }, {\n    word: 'Thank you',\n    pronunciation: 'θæŋk juː',\n    verbFeature: 'gratitude',\n    translation: '谢谢'\n  }\n  // Add more words as needed\n  ]);\n  const [currentWord, setCurrentWord] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(5);\n  const [timerActive, setTimerActive] = useState(false);\n  useEffect(() => {\n    if (words.length > 0) {\n      getRandomWord();\n    }\n  }, [words]);\n  useEffect(() => {\n    let timer;\n    if (timerActive && timeLeft > 0) {\n      timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    } else if (timeLeft === 0) {\n      handlePass();\n    }\n    return () => clearTimeout(timer);\n  }, [timerActive, timeLeft]);\n  const getRandomWord = () => {\n    const randomIndex = Math.floor(Math.random() * words.length);\n    setCurrentWord(words[randomIndex]);\n    setTimeLeft(5);\n    setTimerActive(true);\n  };\n  const handleDictionaryChange = e => {\n    setSelectedDictionary(Number(e.target.value));\n    // Here you would typically fetch words for the selected dictionary\n    // For now, we'll just reset the current word\n    getRandomWord();\n  };\n  const handlePass = () => {\n    getRandomWord();\n  };\n  const handleNotRemember = () => {\n    // Here you could implement logic to mark the word for review\n    console.log(`Marked \"${currentWord.word}\" for review`);\n    getRandomWord();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recite-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dictionary-select\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDictionary,\n        onChange: handleDictionaryChange,\n        children: dictionaries.map(dict => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dict.id,\n          children: dict.name\n        }, dict.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), currentWord && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recite-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-bar\",\n        style: {\n          width: `${timeLeft / 5 * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"recite-word\",\n        children: currentWord.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"recite-pronunciation\",\n        children: currentWord.pronunciation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"recite-verb-feature\",\n        children: currentWord.verbFeature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recite-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNotRemember,\n          children: \"< Not Remember\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePass,\n          children: \"Pass >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(RecitePage, \"6hX71nhgpzWaZRBOTooOBwPZ17c=\");\n_c = RecitePage;\nexport default RecitePage;\nvar _c;\n$RefreshReg$(_c, \"RecitePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RecitePage","_s","dictionaries","setDictionaries","id","name","selectedDictionary","setSelectedDictionary","words","setWords","word","pronunciation","verbFeature","translation","currentWord","setCurrentWord","timeLeft","setTimeLeft","timerActive","setTimerActive","length","getRandomWord","timer","setTimeout","handlePass","clearTimeout","randomIndex","Math","floor","random","handleDictionaryChange","e","Number","target","value","handleNotRemember","console","log","className","children","onChange","map","dict","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onClick","_c","$RefreshReg$"],"sources":["/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/RecitePage/RecitePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './RecitePage.css';\n\nconst RecitePage = () => {\n    const [dictionaries, setDictionaries] = useState([\n        { id: 1, name: 'English-Chinese' },\n        { id: 2, name: 'Business Terms' },\n        // Add more dictionaries as needed\n    ]);\n\n    const [selectedDictionary, setSelectedDictionary] = useState(1);\n    const [words, setWords] = useState([\n        { word: 'Hello', pronunciation: 'həˈləʊ', verbFeature: 'greeting', translation: '你好' },\n        { word: 'Goodbye', pronunciation: 'ɡʊdˈbaɪ', verbFeature: 'farewell', translation: '再见' },\n        { word: 'Thank you', pronunciation: 'θæŋk juː', verbFeature: 'gratitude', translation: '谢谢' },\n        // Add more words as needed\n    ]);\n\n    const [currentWord, setCurrentWord] = useState(null);\n    const [timeLeft, setTimeLeft] = useState(5);\n    const [timerActive, setTimerActive] = useState(false);\n\n    useEffect(() => {\n        if (words.length > 0) {\n            getRandomWord();\n        }\n    }, [words]);\n\n    useEffect(() => {\n        let timer;\n        if (timerActive && timeLeft > 0) {\n            timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n        } else if (timeLeft === 0) {\n            handlePass();\n        }\n        return () => clearTimeout(timer);\n    }, [timerActive, timeLeft]);\n\n    const getRandomWord = () => {\n        const randomIndex = Math.floor(Math.random() * words.length);\n        setCurrentWord(words[randomIndex]);\n        setTimeLeft(5);\n        setTimerActive(true);\n    };\n\n    const handleDictionaryChange = (e) => {\n        setSelectedDictionary(Number(e.target.value));\n        // Here you would typically fetch words for the selected dictionary\n        // For now, we'll just reset the current word\n        getRandomWord();\n    };\n\n    const handlePass = () => {\n        getRandomWord();\n    };\n\n    const handleNotRemember = () => {\n        // Here you could implement logic to mark the word for review\n        console.log(`Marked \"${currentWord.word}\" for review`);\n        getRandomWord();\n    };\n\n    return (\n        <div className=\"recite-page\">\n            <div className=\"dictionary-select\">\n                <select value={selectedDictionary} onChange={handleDictionaryChange}>\n                    {dictionaries.map(dict => (\n                        <option key={dict.id} value={dict.id}>{dict.name}</option>\n                    ))}\n                </select>\n            </div>\n            {currentWord && (\n                <div className=\"recite-card\">\n                    <div className=\"timer-bar\" style={{ width: `${(timeLeft / 5) * 100}%` }}></div>\n                    <h2 className=\"recite-word\">{currentWord.word}</h2>\n                    <p className=\"recite-pronunciation\">{currentWord.pronunciation}</p>\n                    <p className=\"recite-verb-feature\">{currentWord.verbFeature}</p>\n                    <div className=\"recite-buttons\">\n                        <button onClick={handleNotRemember}>&lt; Not Remember</button>\n                        <button onClick={handlePass}>Pass &gt;</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default RecitePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}