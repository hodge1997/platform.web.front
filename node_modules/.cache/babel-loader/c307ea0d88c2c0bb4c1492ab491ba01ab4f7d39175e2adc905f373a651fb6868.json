{"ast":null,"code":"var _jsxFileName = \"/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Correct named import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const userInfo = decodeToken(token);\n      console.log(userInfo);\n      if (userInfo) {\n        setIsLoggedIn(true);\n        setUserEmail(userInfo.email);\n      } else {\n        console.error('Failed to decode token or token is invalid');\n        logout(); // Optional: clear invalid token\n      }\n    }\n  }, []);\n  const login = (token, email) => {\n    localStorage.setItem('token', token);\n    setIsLoggedIn(true);\n    setUserEmail(email);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUserEmail('');\n  };\n  const decodeToken = token => {\n    try {\n      return jwtDecode(token); // Decodes the token and returns user information\n    } catch (e) {\n      console.error('Failed to decode token', e);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      userEmail,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ABoUT6noavazhmPNYSyKIDl50UM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","userEmail","setUserEmail","token","localStorage","getItem","userInfo","decodeToken","console","log","email","error","logout","login","setItem","removeItem","e","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Correct named import\n\n\nexport const AuthContext = createContext();\nexport const AuthProvider = ({ children }) => {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const userInfo = decodeToken(token);\n      console.log(userInfo)\n      if (userInfo) {\n        setIsLoggedIn(true);\n        setUserEmail(userInfo.email);\n      } else {\n        console.error('Failed to decode token or token is invalid');\n        logout(); // Optional: clear invalid token\n      }\n    }\n  }, []);\n\n  const login = (token, email) => {\n    localStorage.setItem('token', token);\n    setIsLoggedIn(true);\n    setUserEmail(email);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUserEmail('');\n  };\n\n\n  const decodeToken = (token) => {\n    try {\n      return jwtDecode(token); // Decodes the token and returns user information\n    } catch (e) {\n      console.error('Failed to decode token', e);\n      return null;\n    }\n  };\n\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, userEmail, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxC,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAC1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,MAAMG,QAAQ,GAAGC,WAAW,CAACJ,KAAK,CAAC;MACnCK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB,IAAIA,QAAQ,EAAE;QACZN,aAAa,CAAC,IAAI,CAAC;QACnBE,YAAY,CAACI,QAAQ,CAACI,KAAK,CAAC;MAC9B,CAAC,MAAM;QACLF,OAAO,CAACG,KAAK,CAAC,4CAA4C,CAAC;QAC3DC,MAAM,CAAC,CAAC,CAAC,CAAC;MACZ;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGA,CAACV,KAAK,EAAEO,KAAK,KAAK;IAC9BN,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;IACpCH,aAAa,CAAC,IAAI,CAAC;IACnBE,YAAY,CAACQ,KAAK,CAAC;EACrB,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBR,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCf,aAAa,CAAC,KAAK,CAAC;IACpBE,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAGD,MAAMK,WAAW,GAAIJ,KAAK,IAAK;IAC7B,IAAI;MACF,OAAOX,SAAS,CAACW,KAAK,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOa,CAAC,EAAE;MACVR,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEK,CAAC,CAAC;MAC1C,OAAO,IAAI;IACb;EACF,CAAC;EAGD,oBACEtB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,UAAU;MAAEE,SAAS;MAAEY,KAAK;MAAED;IAAO,CAAE;IAAAf,QAAA,EACnEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,EAAA,CAhDWF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAmDzB,OAAO,MAAM4B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOlC,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAAC8B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}