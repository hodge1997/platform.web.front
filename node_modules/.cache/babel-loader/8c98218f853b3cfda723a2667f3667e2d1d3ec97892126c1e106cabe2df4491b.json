{"ast":null,"code":"var _jsxFileName = \"/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/FunctionPage/FunctionPage.js\",\n  _s = $RefreshSig$();\n// FunctionPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext'; // Adjust the import path as needed\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css'; // Import default styles for the heatmap\nimport './FunctionPage.css'; // Import your custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FunctionPage = () => {\n  _s();\n  const {\n    userEmail,\n    token\n  } = useAuth(); // Access the user's email and token from the AuthContext\n  const [heatmapData, setHeatmapData] = useState([]); // State to store heatmap data\n  const [searchWord, setSearchWord] = useState(''); // State to store the search input\n  const [searchResult, setSearchResult] = useState(null); // State to store the search result\n\n  useEffect(() => {\n    const fetchHeatmapData = async () => {\n      if (!token) {\n        console.error('No token found, please log in.');\n        return;\n      }\n      try {\n        const response = await fetch('https://cp.dhytv.com/v1/stats/heatmap', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            // Include the token from the AuthContext in the Authorization header\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch heatmap data');\n        }\n        const data = await response.json();\n        console.log(data);\n\n        // Process the data to match the format required by react-calendar-heatmap\n        const processedData = data.map(item => ({\n          date: item.date,\n          // Adjust according to the actual data structure\n          count: item.count\n        }));\n        setHeatmapData(processedData);\n      } catch (error) {\n        console.error('Error fetching heatmap data:', error);\n      }\n    };\n    fetchHeatmapData();\n  }, [token]); // Re-run the effect if the token changes\n\n  const handleSearchSubmit = async event => {\n    event.preventDefault(); // Prevent page reload on form submission\n\n    if (!token) {\n      console.error('No token found, please log in.');\n      return;\n    }\n    try {\n      const response = await fetch(`https://cp.dhytv.com/v1/dicts/word/${searchWord}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          // Include the token from the AuthContext in the Authorization header\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Server Error:', errorData.message || 'Failed to fetch word data');\n        throw new Error(errorData.message || 'Failed to fetch word data');\n      }\n      const resultData = await response.json();\n      console.log(resultData);\n      setSearchResult(resultData); // Update state with search result\n    } catch (error) {\n      console.error('Error fetching word data:', error);\n      setSearchResult(null); // Clear previous results if there is an error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"function-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"function-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"section-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Word Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSearchSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter a word to search\",\n              value: searchWord,\n              onChange: e => setSearchWord(e.target.value) // Update the state with the search input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), searchResult && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Search Result for \\\"\", searchWord, \"\\\":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: JSON.stringify(searchResult)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"section-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Current Dictionary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"English-Chinese\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"section-box\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Learning Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"section-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Learning Heatmap 2024\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CalendarHeatmap, {\n            startDate: new Date('2024-01-01'),\n            endDate: new Date('2024-12-31'),\n            values: heatmapData,\n            classForValue: value => {\n              if (!value) {\n                return 'color-empty';\n              }\n              return `color-github-${Math.min(value.count, 4)}`; // Customize the color based on count\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(FunctionPage, \"VvbHjIQq5PJkBcmuRcidWIZ6BdY=\", false, function () {\n  return [useAuth];\n});\n_c = FunctionPage;\nexport default FunctionPage;\nvar _c;\n$RefreshReg$(_c, \"FunctionPage\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","CalendarHeatmap","jsxDEV","_jsxDEV","FunctionPage","_s","userEmail","token","heatmapData","setHeatmapData","searchWord","setSearchWord","searchResult","setSearchResult","fetchHeatmapData","console","error","response","fetch","method","headers","ok","Error","data","json","log","processedData","map","item","date","count","handleSearchSubmit","event","preventDefault","errorData","message","resultData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","JSON","stringify","startDate","Date","endDate","values","classForValue","Math","min","_c","$RefreshReg$"],"sources":["/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/FunctionPage/FunctionPage.js"],"sourcesContent":["// FunctionPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext'; // Adjust the import path as needed\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css'; // Import default styles for the heatmap\nimport './FunctionPage.css'; // Import your custom CSS file\n\nconst FunctionPage = () => {\n  const { userEmail, token } = useAuth(); // Access the user's email and token from the AuthContext\n  const [heatmapData, setHeatmapData] = useState([]); // State to store heatmap data\n  const [searchWord, setSearchWord] = useState(''); // State to store the search input\n  const [searchResult, setSearchResult] = useState(null); // State to store the search result\n\n  useEffect(() => {\n    const fetchHeatmapData = async () => {\n      if (!token) {\n        console.error('No token found, please log in.');\n        return;\n      }\n\n      try {\n        const response = await fetch('https://cp.dhytv.com/v1/stats/heatmap', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`, // Include the token from the AuthContext in the Authorization header\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch heatmap data');\n        }\n\n        const data = await response.json();\n        console.log(data);\n\n        // Process the data to match the format required by react-calendar-heatmap\n        const processedData = data.map((item) => ({\n          date: item.date, // Adjust according to the actual data structure\n          count: item.count,\n        }));\n\n        setHeatmapData(processedData);\n      } catch (error) {\n        console.error('Error fetching heatmap data:', error);\n      }\n    };\n\n    fetchHeatmapData();\n  }, [token]); // Re-run the effect if the token changes\n\n  const handleSearchSubmit = async (event) => {\n    event.preventDefault(); // Prevent page reload on form submission\n\n    if (!token) {\n      console.error('No token found, please log in.');\n      return;\n    }\n\n    try {\n      const response = await fetch(`https://cp.dhytv.com/v1/dicts/word/${searchWord}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`, // Include the token from the AuthContext in the Authorization header\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Server Error:', errorData.message || 'Failed to fetch word data');\n        throw new Error(errorData.message || 'Failed to fetch word data');\n      }\n\n      const resultData = await response.json();\n      console.log(resultData);\n      setSearchResult(resultData); // Update state with search result\n    } catch (error) {\n      console.error('Error fetching word data:', error);\n      setSearchResult(null); // Clear previous results if there is an error\n    }\n  };\n\n  return (\n    <div className=\"function-page\">\n      {/* Main container for two-column layout */}\n      <div className=\"function-page-container\">\n        {/* Left panel for Word Search (1/3 width) */}\n        <div className=\"left-panel\">\n          <section className=\"section-box\">\n            <h2>Word Search</h2>\n\n            <form onSubmit={handleSearchSubmit}>\n              <input\n                type=\"text\"\n                placeholder=\"Enter a word to search\"\n                value={searchWord}\n                onChange={(e) => setSearchWord(e.target.value)} // Update the state with the search input\n              />\n              <button type=\"submit\">Search</button>\n            </form>\n\n            {/* Display the search result if available */}\n            {searchResult && (\n              <div>\n                <h3>Search Result for \"{searchWord}\":</h3>\n                <p>{JSON.stringify(searchResult)}</p> {/* Display raw JSON or format as needed */}\n              </div>\n            )}\n          </section>\n        </div>\n\n        {/* Right panel for other content (2/3 width) */}\n        <div className=\"right-panel\">\n          {/* Welcome message with user's name or email */}\n\n\n          {/* Section for English-Chinese vocabulary */}\n          <section className=\"section-box\">\n            <h2>Current Dictionary</h2>\n            <p>English-Chinese</p>\n            {/* ... Your vocabulary section goes here ... */}\n          </section>\n\n          {/* Section for vocabulary progress */}\n          <section className=\"section-box\">\n            <h2>Learning Progress</h2>\n            {/* ... Your progress section goes here ... */}\n          </section>\n\n          {/* Heatmap Section */}\n          <section className=\"section-box\">\n            <h2>Learning Heatmap 2024</h2>\n            <CalendarHeatmap\n              startDate={new Date('2024-01-01')}\n              endDate={new Date('2024-12-31')}\n              values={heatmapData}\n              classForValue={(value) => {\n                if (!value) {\n                  return 'color-empty';\n                }\n                return `color-github-${Math.min(value.count, 4)}`; // Customize the color based on count\n              }}\n            />\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FunctionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}