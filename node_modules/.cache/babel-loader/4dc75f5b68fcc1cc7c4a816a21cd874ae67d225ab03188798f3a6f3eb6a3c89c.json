{"ast":null,"code":"var _jsxFileName = \"/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/FunctionPage/FunctionPage.js\",\n  _s = $RefreshSig$();\n// FunctionPage.js\nimport React from 'react';\nimport { useAuth } from '../contexts/AuthContext'; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FunctionPage = () => {\n  _s();\n  const {\n    userEmail\n  } = useAuth(); // Access the user's email from the AuthContext\n\n  // Example data for vocabulary and progress; in a real app, this might come from a database or API\n  const vocabulary = {\n    English: ['apple', 'banana', 'cat'],\n    // Example words; replace with actual data\n    Chinese: ['苹果', '香蕉', '猫']\n  };\n  const masteredWordsCount = 10; // Example number of mastered words\n  const totalWordsCount = vocabulary.English.length; // Example total number of words\n\n  // Placeholder for heatmap data; replace with actual heatmap logic and data\n  const heatmapData = [{\n    date: '2024-08-01',\n    count: 5\n  }, {\n    date: '2024-08-02',\n    count: 10\n  }\n  // ... more data\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", userEmail || 'User', \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"English-Chinese Vocabulary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: vocabulary.English.map((word, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [word, \" - \", vocabulary.Chinese[index]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have mastered \", masteredWordsCount, \" out of \", totalWordsCount, \" words.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Learning Heatmap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap\",\n        children: heatmapData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: `rgba(0, 0, 255, ${data.count / 20})`,\n            padding: '5px',\n            margin: '2px',\n            display: 'inline-block'\n          },\n          children: [data.date, \": \", data.count]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(FunctionPage, \"3jIXyrbSnB/sArq9O0iTtxSXe6Y=\", false, function () {\n  return [useAuth];\n});\n_c = FunctionPage;\nexport default FunctionPage;\nvar _c;\n$RefreshReg$(_c, \"FunctionPage\");","map":{"version":3,"names":["React","useAuth","jsxDEV","_jsxDEV","FunctionPage","_s","userEmail","vocabulary","English","Chinese","masteredWordsCount","totalWordsCount","length","heatmapData","date","count","children","fileName","_jsxFileName","lineNumber","columnNumber","map","word","index","className","data","style","backgroundColor","padding","margin","display","_c","$RefreshReg$"],"sources":["/Users/sha/Desktop/CollectPie_frontend/collectpie_flask/src/components/FunctionPage/FunctionPage.js"],"sourcesContent":["// FunctionPage.js\nimport React from 'react';\nimport { useAuth } from '../contexts/AuthContext'; // Adjust the import path as needed\n\nconst FunctionPage = () => {\n  const { userEmail } = useAuth(); // Access the user's email from the AuthContext\n\n  // Example data for vocabulary and progress; in a real app, this might come from a database or API\n  const vocabulary = {\n    English: ['apple', 'banana', 'cat'], // Example words; replace with actual data\n    Chinese: ['苹果', '香蕉', '猫'],\n  };\n\n  const masteredWordsCount = 10; // Example number of mastered words\n  const totalWordsCount = vocabulary.English.length; // Example total number of words\n  \n  // Placeholder for heatmap data; replace with actual heatmap logic and data\n  const heatmapData = [\n    { date: '2024-08-01', count: 5 },\n    { date: '2024-08-02', count: 10 },\n    // ... more data\n  ];\n\n  return (\n    <div>\n      {/* Welcome message with user's name or email */}\n      <div>\n        <h1>Welcome, {userEmail || 'User'}!</h1>\n      </div>\n\n      {/* Section for English-Chinese vocabulary */}\n      <section>\n        <h2>English-Chinese Vocabulary</h2>\n        <ul>\n          {vocabulary.English.map((word, index) => (\n            <li key={index}>\n              {word} - {vocabulary.Chinese[index]}\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      {/* Section for vocabulary progress */}\n      <section>\n        <h2>Progress</h2>\n        <p>You have mastered {masteredWordsCount} out of {totalWordsCount} words.</p>\n      </section>\n\n      {/* Placeholder for a heatmap */}\n      <section>\n        <h2>Learning Heatmap</h2>\n        {/* Implement a real heatmap component here or replace with actual chart/heatmap */}\n        <div className=\"heatmap\">\n          {heatmapData.map((data, index) => (\n            <div key={index} style={{ backgroundColor: `rgba(0, 0, 255, ${data.count / 20})`, padding: '5px', margin: '2px', display: 'inline-block' }}>\n              {data.date}: {data.count}\n            </div>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default FunctionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}